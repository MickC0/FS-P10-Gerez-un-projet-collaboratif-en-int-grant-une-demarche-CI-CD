name: Frontend CI + Publish coverage to gh-pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write

jobs:
  build-and-publish-frontend:
    name: Build & Publish Frontend Coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: npm
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run front-end tests & generate coverage
        id: run-frontend-tests
        run: npm test -- --code-coverage --watch=false --browsers=ChromeHeadlessCI
        continue-on-error: true

      - name: Verify front coverage report exists
        run: |
          set -e
          echo "Looking for coverage directory under front/coverage…"
          BASE=front/coverage
          if [ -f "$BASE/index.html" ]; then
            COV_DIR="$BASE"
          else
            SUB=$(find "$BASE" -maxdepth 1 -mindepth 1 -type d | head -n1)
            if [ -n "$SUB" ] && [ -f "$SUB/index.html" ]; then
              COV_DIR="$SUB"
            else
              echo "Error: Aucun index.html dans front/coverage ni sous-dossier." >&2
              exit 1
            fi
          fi
          
          echo "Found coverage in $COV_DIR, preparing _site/coverage-frontend…"
          rm -rf _site
          mkdir -p _site/coverage-frontend
          cp -R "$COV_DIR"/* _site/coverage-frontend/
          touch _site/.nojekyll

      - name: Deploy coverage to gh-pages branch
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site
          publish_branch: gh-pages
          allow_empty_commit: true

      - name: Upload frontend coverage to Codecov
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend
