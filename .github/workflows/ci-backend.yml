name: Backend CI + Publish coverage to gh-pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write
  pages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-publish:
    name: Run tests, coverage & publish to Pages
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./back

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: maven

      - name: Run tests & generate Jacoco report
        id: tests
        run: mvn clean verify jacoco:report
        continue-on-error: true

      - name: Verify coverage exists
        run: |
          if [ ! -f "./target/site/jacoco/jacoco.xml" ]; then
            echo "jacoco.xml missing" 
            exit 1
          fi

      - name: Prepare Pages directory
        run: |
          rm -rf _site
          mkdir -p _site/coverage-backend
          cp -R target/site/jacoco/* _site/coverage-backend/
          touch _site/.nojekyll

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: _site
          publish_branch: gh-pages
          allow_empty_commit: true

      - name: Upload to Codecov
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend

      - name: SonarCloud Scan
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        uses: SonarSource/sonarqube-scan-action@v4
        with:
          args: >
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.organization=mickc0
            -Dsonar.projectKey=MickC0_FS-P10-Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
            -Dproject.settings=sonar-backend.properties
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Quality Gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: back/target/sonar/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true

      - name: Fail on unmet requirements
        if: ${{ steps.tests.outcome == 'failure' || steps.quality-gate.outcome == 'failure' }}
        run: |
          echo "Build failed due to test or quality gate"
          exit 1
