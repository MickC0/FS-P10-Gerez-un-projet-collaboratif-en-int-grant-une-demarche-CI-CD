name: Backend CI + Publish coverage to gh-pages
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
on:
  workflow_dispatch:
  pull_request:
    branches: [ "main" ]
    types: [opened, synchronize, reopened]
  push:
    branches: [ "main" ]
jobs:

  backend-tests-analysis:
    name: Run backend tests and quality analysis
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./back
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Run tests and generate coverage report
        id: run-backend-tests
        run: mvn clean verify jacoco:report

        continue-on-error: true


      - name: Verify coverage report existence and stop if missing
        run: |
          if [ ! -f "./target/site/jacoco/jacoco.xml" ]; then          
           echo "Error: File 'back/target/site/jacoco/jacoco.xml' not found. Job failed."
           exit 1
          fi
        shell: bash

      - name: Upload backend coverage report artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: ./back/target/site/jacoco
          retention-days: 7


      - name: Publish backend coverage report to Github Pages
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./back/target/site/jacoco
          destination_dir: ./coverage-backend


      - name: Upload backend coverage report to Codecov
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: backend

      - name: SonarQube Scan for push to main
        if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}

        run: |
          mvn clean install sonar:sonar -X \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=mickc0 \
            -Dsonar.projectKey=MickC0_FS-P10-Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dproject.settings=../sonar-backend.properties

      - name: SonarQube Scan on pull request
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          mvn clean install sonar:sonar -X \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.organization=mickc0 \
            -Dsonar.projectKey=MickC0_FS-P10-Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dproject.settings=../sonar-backend.properties \
            -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
            -Dsonar.pullrequest.branch=${{ github.head_ref }} \
            -Dsonar.pullrequest.base=${{ github.base_ref }}

      - name: SonarQube Quality Gate Check
        id: quality-gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: back/target/sonar/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        continue-on-error: true


      - name: Check requirements
        if: ${{ steps.run-backend-tests.outcome == 'failure' || steps.quality-gate.outcome == 'failure'}}
        run: |
          echo "Job failed :"
          if [ "${{ steps.run-backend-tests.outcome }}" == "failure" ]; then
            echo "Coverage checks have not been met. See step 'Run tests and generate coverage report' output, and coverage report"
          fi
          if [ "${{ steps.quality-gate.outcome }}" == "failure" ]; then
            echo "Code quality gate check failed. See step 'SonarQube Quality Gate Check'"
          fi
          exit 1